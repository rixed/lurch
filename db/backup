#!/bin/bash

set -e
set -o pipefail

# Must match what's in db/create:
instance_name=lurchdb
db_port=5433
db_name=lurch

backup_dir=/mnt/backup-server/backups/lurch/db

if test -z "$(docker ps -f "name=$instance_name" --format json)" ; then
  echo "Lurch is not running."
  exit 0
fi

# Check backup_dir does indeed exist, or the backup disk might not be mounted:
if ! test -d "$backup_dir"; then
  echo "Backup directory ($backup_dir) does not exist: not mounted?"
  exit 1
fi

dest="$backup_dir/$(date +%Y-%m-%d_%H:%M).sql.gz"

echo -n "Backing up into $dest... "

docker exec -i $instance_name pg_dump --clean -U postgres -d "$db_name" | gzip > "$dest".tmp &&
mv "$dest".tmp "$dest"

echo Done

echo -n "Latest backup size: "
du -h -s "$dest"
echo -n "Total backup size: "
du -h -s "$backup_dir"
echo -n "Available disk space:"
df -h --output=avail "$dest" | sed -e 1d

# Note: restore with:
#
# docker exec -i $instance_name dropdb -U postgres "$db_name" &&
# db/create &&
# zcat $dest | docker exec -i $instance_name psql -U postgres -d "$db_name"
